<Project Sdk="Microsoft.NET.Sdk">

  <!-- 
  Imports silksong path properties only if present in order to allow CI builds. The file should be gitignored.
  If you are checking out from git and need to create a new one, you can use `dotnet new silksongpath` to generate one.
  -->
  <Import Condition="Exists('SilksongPath.props')" Project="SilksongPath.props" />

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <RestoreAdditionalProjectSources>
      https://nuget.bepinex.dev/v3/index.json
    </RestoreAdditionalProjectSources>
    <RestorePackagesWithLockFile Condition="'$(game-version)' == 'latest'">True</RestorePackagesWithLockFile>
    <!--Allow access of private members at runtime.-->
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <!--Shortens and anonymizes paths in debug symbols relative to the project directory. Breakpoints will not work, however.-->
    <PathMap Condition="'$(Configuration)' == 'Release'">$(MSBuildProjectDirectory)=/</PathMap>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="BepInEx.Analyzers" Version="1.0.8" PrivateAssets="all" />
    <PackageReference Include="BepInEx.Core" Version="5.4.21" />
    <PackageReference Include="Hamunii.BepInEx.AutoPlugin" Version="2.0.1" PrivateAssets="all"/>
    <PackageReference Include="UnityEngine.Modules" Version="UnityVersion" IncludeAssets="compile" />
    <!--If you're unable resolve this dependency, check that you're using the nuget v3 package feed instead of v2.-->
    <PackageReference Include="Silksong.GameLibs" Version="*-*" PrivateAssets="all" Condition="'$(game-version)' == 'latest'"/>
    <PackageReference Include="Silksong.GameLibs" Version="1.1.0-silksongSilksongVersion" PrivateAssets="all" Condition="'$(game-version)' != 'latest'"/>
  </ItemGroup>

  <Target Name="CopyMod" AfterTargets="PostBuildEvent" Condition="'$(SilksongFolder)' != ''">
    <ItemGroup>
      <Binaries Include="$(TargetPath)"/>
      <Binaries Include="$(TargetDir)/$(TargetName).pdb"/>
    </ItemGroup>

    <Copy SourceFiles="@(Binaries)" DestinationFolder="$(SilksongFolder)/BepInEx/plugins/$(TargetName)" />

    <PropertyGroup>
      <ExportFolder>bin/Publish</ExportFolder>
    </PropertyGroup>

    <RemoveDir Directories="$(IntermediateOutputPath)/archive"/>
    <MakeDir Directories="$(ExportFolder)"/>
    <Copy SourceFiles="@(Binaries)" DestinationFolder="$(IntermediateOutputPath)/archive"/>
    <ZipDirectory SourceDirectory="$(IntermediateOutputPath)/archive" DestinationFile="$(ExportFolder)/$(TargetName).zip" Overwrite="True"/>
  </Target>
</Project>