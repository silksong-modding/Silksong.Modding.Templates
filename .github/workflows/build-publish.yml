name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  id-token: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build -c Release
    - name: Get Version
      id: version
      run: |-
        VERSION=$(dotnet build Silksong.Modding.Templates.csproj -getProperty:PackageVersion)
        echo Version is $VERSION
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    # attempts to publish to NuGet on any push to main. Skips already-published versions.
    - name: NuGet Login
      id: login
      if: github.event_name == 'push'
      uses: NuGet/login@v1
      with:
        user: ${{ secrets.NUGET_USER }}
    - name: Publish NuGet
      id: publish
      if: github.event_name == 'push'
      run: |-
        dotnet nuget push bin/Release/*.nupkg \
          --api-key ${{ steps.login.outputs.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json
      continue-on-error: true
    - name: Create Release
      if: github.event_name == 'push' && steps.publish.outcome == 'success'
      uses: softprops/action-gh-release@v2
      with:
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, '-') }}
        generate_release_notes: true
        tag_name: v${{ steps.version.outputs.version }}
